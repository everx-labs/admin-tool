{ show-options-help 1 halt } : usage

60 =: exp-t false =: neww 0 =: workchain

begin-options
    "<filebase> <seqno> [<savefile>]" +cr +cr
    +"creates an external message to the extmsg-test contract, with seqno <seqno>," +cr
    +"using the <filebase>.pk for signing (will be created if not exists), then" +cr
    +"saves ext msg to <savefile>.boc ('extmsg-test-req.boc' by default) and" +cr
    +"contract address in binary format to <filebase>.addr" +cr

    disable-digit-options generic-help-setopt
    "t" "--expt" { parse-int =: exp-t } short-long-option-arg
        "sets expiration timeout in seconds (" exp-t (.) $+ +" by default)" option-help
    "s" "--sgid" { parse-int =: sgid } short-long-option-arg
        "sets signature id (for signature id capability)" option-help
    "n" "--neww" { true =: neww } short-long-option
        9 chr +"adds a state init to create a new contract" option-help
    "h" "--help" { usage } short-long-option
        9 chr +"shows a help message" option-help
parse-options

$# dup 2 < swap 3 > or ' usage if
3 :$1..n

$1 =: filebase
$2 parse-int =: seqno
$3 "extmsg-test-req" replace-if-null =: savefile

// INCLUDE: ./contracts/extmsg-test.fif
=: code

filebase +".pk" load-generate-keypair cr
=: priv-key =: pub-key

<b pub-key B, 0 16 u, b> =: data
<b b{00110} s, code ref, data ref, b> =: init

workchain init hashu 2=: smc-addr

."extmsg-test address:"
cr smc-addr .addr cr
smc-addr filebase +".addr" save-address-verbose cr

{ <b swap 32 i, b> <s 4 B@ } : i>sgidB

<b now exp-t + 64 u, seqno 16 u, b> =: payload

payload hashB
def? sgid { @' sgid i>sgidB swap B+ } if
priv-key ed25519_sign =: sign

<b
    b{1000} s, smc-addr Addr, 0 Gram,
    neww { b{10} s, init <s s, } { b{0} s, } cond
    b{0} s, <b sign B, payload <s s, b> <s s,
b>

dup hashB ."external message hash: " cr B>x type cr cr

2 boc+>B savefile +".boc" tuck B>file
."saved external message to file: " type cr
